{"version":3,"sources":["cat-photo.jpg","App.jsx","reportWebVitals.js","index.js"],"names":["App","years","setYears","useState","humanAge","useMemo","catYears","humanYears","calculateCatAgeFromYears","parseInt","_jsxs","className","children","_jsx","src","kittyphoto","alt","onSubmit","event","preventDefault","type","name","placeholder","value","onChange","newYears","Math","max","target","min","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"wJAAe,G,KAAA,IAA0B,uC,cCiC1B,SAASA,IAEtB,MAAOC,EAAOC,GAAYC,mBAAS,GAG7BC,EAAWC,kBAAQ,IAjC3B,SAAkCC,GAEhC,GAAwB,kBAAbA,GAAyBA,EAAW,EAC7C,OAAO,EAGT,GAAiB,IAAbA,EACF,OAAO,GAGT,GAAiB,IAAbA,EACF,OAAO,GAET,GAAIA,EAAW,EAAG,CAEhB,IAAIC,EAAa,GAKjB,OADAA,GAAgC,GADTD,EAAW,GAE3BC,CACT,CAGA,OAAO,CACT,CAUWC,CAAyBC,SAASR,IAAU,GAClD,CAACA,IAcJ,OACES,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAElBF,eAAA,QAAAE,SAAA,CACEC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,OACEC,IAAKC,EACLC,IAAI,oDAGRH,cAAA,OAAKF,UAAU,WAAUC,SACvBC,cAAA,KAAAD,SAAG,iEAKLC,cAAA,OAAAD,SACEF,eAAA,QAAMO,SAtBQC,IAClBA,EAAMC,kBAqB2BP,SAAA,CAAC,iCAE5BF,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACrBC,cAAA,SACEO,KAAK,SACLC,KAAK,QACLV,UAAU,QACVW,YAAY,QACZC,MAAOtB,EACPuB,SAtCYN,IAExB,MAAMO,EAAWC,KAAKC,IAAI,EAAGlB,SAASS,EAAMU,OAAOL,MAAO,KAAO,GACjErB,EAASuB,IAoCGI,IAAI,IACJF,IAAI,OAGAjB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CACvCC,cAAA,MAAAD,SAAI,0BACJF,eAAA,KAAGC,UAAU,YAAWC,SAAA,CAAER,EAAS,kBAGnCS,cAAA,SACAA,cAAA,UAAQO,KAAK,SAAQR,SAAC,sBAI5BC,cAAA,UAAQF,UAAU,aAAYC,SAAC,yCAGrC,CCvFekB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP5B,cAAC6B,IAAMC,WAAU,CAAA/B,SACfC,cAACb,EAAG,MAEN4C,SAASC,eAAe,SAM1Bf,G","file":"static/js/main.edcd063c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cat-photo.95755b98.jpg\";","import React, { useState, useMemo } from \"react\";\nimport kittyphoto from \"./cat-photo.jpg\";\nimport \"./App.css\";\n\n\nfunction calculateCatAgeFromYears(catYears) {\n  // Ensure the input is a valid positive number\n  if (typeof catYears !== 'number' || catYears < 0) {\n    return 0;\n  }\n  \n  if (catYears === 1) {\n    return 15;\n  }\n  \n  if (catYears === 2) {\n    return 24;\n  }\n  if (catYears > 2) {\n    // Start with the first two years (24)\n    let humanYears = 24;\n    \n    // Add 4 human years for every year past the second year\n    const remainingYears = catYears - 2;\n    humanYears += (remainingYears * 4);\n    return humanYears;\n  }\n  \n  // If years is 0 or less than 1, return 0 for now.\n  return 0; \n}\n\n\nexport default function App() {\n  // State to hold the cat's age inputs\n  const [years, setYears] = useState(0);\n\n  // Use useMemo to calculate the human age only when 'years' changes\n  const humanAge = useMemo(() => {\n    // We only call the calculation if years is a positive integer\n    return calculateCatAgeFromYears(parseInt(years) || 0);\n  }, [years]);\n\n  const handleYearChange = (event) => {\n    // Use Math.max to prevent negative numbers, and parseInt to ensure integer input\n    const newYears = Math.max(0, parseInt(event.target.value, 10) || 0);\n    setYears(newYears);\n  };\n  \n  // Handler to prevent form submission\n  const handleSubmit = (event) => {\n      event.preventDefault();\n  };\n\n\n  return (\n    <div className=\"App\">\n      {/* <Navbar /> */}\n      <main>\n        <div className=\"kittyphoto\">\n          <img\n            src={kittyphoto}\n            alt=\"an orange tabby cat wearing purple sunglasses\"\n          />\n        </div>\n        <div className=\"question\">\n          <p>Have you ever wondered how old your cat is in human years?</p>\n        </div>\n\n\n\n        <div>\n          <form onSubmit={handleSubmit}>\n            Enter your cat's age in years:\n            <div className=\"inputs\">\n              <input\n                type=\"number\"\n                name=\"years\"\n                className=\"years\"\n                placeholder=\"Years\"\n                value={years}\n                onChange={handleYearChange}\n                min=\"0\"\n                max=\"30\"\n              />\n           \n                    <div className=\"result-display\">\n            <h2>Your Cat's Human Age:</h2>\n            <p className=\"human-age\">{humanAge} years</p>\n        </div>\n        </div>\n            <br />\n            <button type=\"submit\">Calculate</button>\n          </form>\n        </div>\n      </main>\n      <footer className=\"App-footer\">Created by Heather Smith Â© 2023</footer>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}